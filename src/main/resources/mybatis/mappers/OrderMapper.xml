<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="OrderMapper">
  	
  	<sql id="order_cols">
  		odr.odr_seq
  		, odr.product_ref
  		, odr.order_time
  		, odr.payment_due_time
  		, odr.paid_time
  		, odr.trial_order
  		, odr.total_amount
  		, odr.customer_ref
  		, odr.confirmer_ref
  		, odr.order_uuid
  		, odr.order_state
  		, odr.pg_vendor
  		, odr.trx_detail
  		, odr.mid_trx_uid
  		, odr.end_trx_uid
  		, odr.license_qtt
  	</sql>
  	<resultMap type="Order" id="baseOrderMap">
		<id column="odr_seq" property="seq"/>
  		<result column="product_ref" property="productRef"/>
  		<result column="order_time" property="orderTime"/>
  		<result column="payment_due_time" property="paymentDueTime"/>
  		<result column="paid_time" property="paidTime"/>
  		<result column="trial_order" property="trialOrder"/>
  		<result column="total_amount" property="totalAmount"/>
  		<result column="customer_ref" property="customerRef"/>
  		<result column="confirmer_ref" property="confirmerRef"/>
  		<result column="order_uuid" property="orderUuid"/>
  		<result column="order_state" property="orderState"/>
  		<result column="pg_vendor" property="paygateVendor"/>
  		<result column="trx_detail" property="transactionDetail"/>
  		<result column="mid_trx_uid" property="midTransactionUid"/>
  		<result column="end_trx_uid" property="endTransactionUid"/>
  		<result column="license_qtt" property="licenseQtt"/>
  	</resultMap>
  	<resultMap type="Order" id="ordermap" extends="baseOrderMap">
  		<association property="product" resultMap="ProductMapper.prodmap"/>
  		<association property="customer" resultMap="UserMapper.usermap"/>
  		<association property="deliveryInfo" resultMap="DeliveryInfoMapper.deliveryMap"/>
  	</resultMap>
  	
  	<resultMap type="Order" id="orderWithItemCount" extends="ordermap">
  		<result column="item_count" property="itemCount" />
  	</resultMap>
  	
  	<select id="findBy" parameterType="map" resultMap="ordermap">
  		SELECT
	  		<include refid="order_cols" />
	  	FROM dt_orders odr
	  	WHERE odr.${colname} = #{value}
	  	<if test="state != NULL">
	  		AND odr.order_state = ${state}
	  	</if>
  	</select>
  	<!-- 
  	결제 구매 내역(무료 평가판 구매는 제외)
  	공동구매 상품까지 가져오기 위해서 ('RDY', 'ATV') 상태로 조회함
  	공구 상품은 관리자가 주문을 입력하면 'RDY' 상태에서 시작함
  	odr.produt_ref 를 이용해서 product.salesType으로 주문의 유형을 특정할 수 있음 
  	-->
  	<select id="findPurchasedOrders" parameterType="map" resultMap="ordermap">
  		SELECT
	  		<include refid="order_cols" />,
	  		<include refid="ProductMapper.prodmap_cols"/>
	  	FROM dt_orders odr
	  	JOIN dt_products prod
	  	  ON odr.product_ref = prod.prod_seq
	  	WHERE odr.customer_ref = #{userSeq}
	  		AND odr.order_state IN ('RDY', 'ATV')
	  		AND odr.trial_order = 'N'
	  	ORDER
	  	  BY odr.odr_seq DESC
  	</select>
  	<select id="findGroupOrders"></select>
  	
  	<select id="findOrders" resultMap="orderWithItemCount">
  		SELECT
	  		<include refid="order_cols" />
	  		,
	  		<include refid="ProductMapper.prodmap_cols"/>
	  		,
	  		<include refid="UserMapper.usermap_cols"/>
	  		,
	  		<include refid="DeliveryInfoMapper.delivery_info_cols"/>
	  		,
	  		_cnt.item_count
	  	FROM (
	  		SELECT
				odr.odr_seq ,
				COUNT(odr.odr_seq) as item_count
			FROM
				dt_orders odr
			LEFT JOIN dt_licenses lcs ON
				odr.odr_seq = lcs.order_ref
			GROUP BY
				odr.odr_seq) _cnt
	  	JOIN dt_orders odr
  		  ON _cnt.odr_seq = odr.odr_seq
  		JOIN dt_users u
  		  ON odr.customer_ref = u.user_seq
  		LEFT
  		JOIN dt_products prod
  		  ON odr.product_ref = prod.prod_seq
  		LEFT
  		JOIN dt_deliveries dlv
  		  ON dlv.dl_order_ref = _cnt.odr_seq
  		ORDER BY odr.odr_seq DESC
  	</select>
  	
  	<insert id="insertOrder" parameterType="Order"
  		useGeneratedKeys="true"
  		keyColumn="odr_seq"
  		keyProperty="seq">
  	INSERT INTO dt_orders(
  		product_ref
  		, order_time
  		, payment_due_time
  		, paid_time
  		, trial_order
  		, total_amount
  		, customer_ref
  		, confirmer_ref
  		, order_uuid
  		, order_state
  		, pg_vendor
  		, license_qtt
  	) values (
  		#{productRef}
  		, #{orderTime}
  		, #{paymentDueTime}
  		, null
  		, #{trialOrder}
  		, #{totalAmount}
  		, #{customerRef}
  		, null
  		, #{orderUuid}
  		, #{orderState}
  		, #{paygateVendor}
  		, #{licenseQtt}
  	)
  	</insert>
  	<!-- 결제 승인 처리: 승인날짜와 승인자 seq를 기록함 -->
  	<update id="activateOrder" parameterType="Order">
  		UPDATE dt_orders
  		SET
  			paid_time = #{paidTime}
  		  , confirmer_ref = #{confirmerRef}
  		  , order_state = #{orderState}
  		  , pg_vendor = #{paygateVendor}
  		  , trx_detail = #{transactionDetail}
  		  , mid_trx_uid = #{midTransactionUid}
  		  , end_trx_uid = #{endTransactionUid}
  		WHERE
  			odr_seq = #{seq}
  			AND
  			paid_time IS NULL
  			AND
  			confirmer_ref IS NULL
  	</update>
  	<update id="updateState" parameterType="Order">
  		UPDATE dt_orders
  		SET
  			order_state = #{orderState}
  		WHERE
  			order_uuid = #{orderUuid} 
  	</update>
  </mapper>